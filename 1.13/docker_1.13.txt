Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Try the new cross-platform PowerShell https://aka.ms/pscore6

PS D:\Blog\material-applications-main-localForBlog\example-backend> docker build . -t backend
[+] Building 29.0s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                               0.0s
 => => transferring dockerfile: 32B                                                                                0.0s
 => [internal] load .dockerignore                                                                                  0.0s
 => => transferring context: 111B                                                                                  0.0s
 => [internal] load metadata for docker.io/library/golang:1.16.7-alpine3.13                                        6.5s
 => [auth] library/golang:pull token for registry-1.docker.io                                                      0.0s
 => [1/4] FROM docker.io/library/golang:1.16.7-alpine3.13@sha256:fa2867b6256981bbac29d7a0e8e424e278a3ba02db7c1e67  0.0s
 => [internal] load build context                                                                                  0.1s
 => => transferring context: 28.90kB                                                                               0.1s
 => CACHED [2/4] WORKDIR /usr/src/app                                                                              0.0s
 => [3/4] COPY . .                                                                                                 0.0s
 => [4/4] RUN go build                                                                                            20.5s
 => exporting to image                                                                                             1.7s
 => => exporting layers                                                                                            1.7s
 => => writing image sha256:681fa71dbddb82e3476ba712914a4eb8b8f7e3d6878c8a02d59c5259d30996cc                       0.0s
 => => naming to docker.io/library/backend                                                                         0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS D:\Blog\material-applications-main-localForBlog\example-backend> docker run -p 8080:8080 backend
[Ex 2.4+] REDIS_HOST env was not passed so redis connection is not initialized
[Ex 2.6+] POSTGRES_HOST env was not passed so postgres connection is not initialized
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:   export GIN_MODE=release
 - using code:  gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> server/router.pingpong (4 handlers)
[GIN-debug] GET    /messages                 --> server/controller.GetMessages (4 handlers)
[GIN-debug] POST   /messages                 --> server/controller.CreateMessage (4 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/09/19 - 09:24:26 | 404 |       68.06µs |      172.17.0.1 | GET      "/"
[GIN] 2021/09/19 - 09:24:42 | 200 |      12.544µs |      172.17.0.1 | GET      "/ping"
